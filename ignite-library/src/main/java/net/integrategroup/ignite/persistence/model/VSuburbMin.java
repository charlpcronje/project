package net.integrategroup.ignite.persistence.model;

import java.io.Serializable;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;

/** @author Generated by Johannes Marais (JohannesSQL v7.7) **/
/** ******* ********* ** 2023-11-04 19:30:28 ******** *xxx* **/

@Entity
@Table(schema = "ig_db", name = "vSuburbMin")
public class VSuburbMin implements Serializable {


    private static final long serialVersionUID = 660368293760592201L; /** ID was Generated by Johannes **/


    @Id
	@Column(name = "SuburbId")
	private Long suburbId;

	@Column(name = "Name")
	private String name;

	@Column(name = "CityId")
	private Long cityId;




	public Long getSuburbId() {
		return suburbId;
	}

	public void setSuburbId(Long suburbId) {
		this.suburbId = suburbId;
	}

	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}

	public Long getCityId() {
		return cityId;
	}

	public void setCityId(Long cityId) {
		this.cityId = cityId;
	}




}

/**  javascript      vir grid population        (jsStr)

	var columnsArray = [
		 { data: "suburbId" }                 //0 MySql-TableName: VSuburbMin
		,{ data: "name" }                     //1
		,{ data: "cityId" }                   //2
	];

	var columnDefsArray = [
		{
			visible: false,
			targets: [0, 2]
		}
	];







/**  javascript      vir grid SelectFromGridDialog        (js1Str)

	var columns = [
		{ data: "suburbId", name: "SuburbId" }                             //0 MySql-TableName: VSuburbMin
		,{ data: "name", name: "Name" }                                     //1
		,{ data: "cityId", name: "CityId" }                                 //2
	];

	var columnDefs = [
		{
			visible: false,
			targets: [0, 2]
		}
	];







Vir 'n Save Data function sien SuburbMin.java






Vir 'n Populate Data function                                                  (js3Str)

		//  MySql-TableName: VSuburbMin										   (js3Str)
		$("#xxxSuburbId").val(data.suburbId);                             //0
		$("#xxxName").val(data.name);                                     //1
		$("#xxxCityId").val(data.cityId);                                 //2
		populateSelect("xxxCityId",                                       //name of html select element that will be populated
				"/rest/ignite/v1/city/find-all",                          //url
				"cityId",                                                 //the value that must be saved (ReferencedColumnName)
				"name",                                                   //shown to user (usually a Name column)
				data.cityId,                                              //The selected one, if there is one
				true,                                                     //addEmpty, boolean: should we add empty object at the top
				null                                                      //completeMethod
		);







/**  HTML  om 'n grid te populate
												<th>SuburbId</th>                    <!--0  MySql-TableName: VSuburbMin-->
												<th>Name</th>                        <!--1  Name-->
												<th>CityId</th>                      <!--2  CityId-->

*/