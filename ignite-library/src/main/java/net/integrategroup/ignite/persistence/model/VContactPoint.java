package net.integrategroup.ignite.persistence.model;

import java.io.Serializable;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;

/** @author Generated by Johannes Marais (JohannesSQL v7.7) **/
/** ******* ********* ** 2023-11-05 06:47:57 ******** *xxx* **/

@Entity
@Table(schema = "ig_db", name = "vContactPoint")
public class VContactPoint implements Serializable {


    private static final long serialVersionUID = 548526870465178909L; /** ID was Generated by Johannes **/


    @Id
	@Column(name = "ContactPointId")
	private Long contactPointId;

	@Column(name = "Name")
	private String name;

	@Column(name = "ParticipantOfficeId")
	private Long participantOfficeId;



	@Column(name = "ParticipantOfficeId_Name")
	private String participantOfficeId_Name;

	@Column(name = "EmailAddress")
	private String emailAddress;

	@Column(name = "PhoneNumber")
	private String phoneNumber;

	@Column(name = "AddressLine1")
	private String addressLine1;

	@Column(name = "AddressLine2")
	private String addressLine2;

	@Column(name = "AddressLine3")
	private String addressLine3;

	@Column(name = "SuburbId")
	private Long suburbId;



	@Column(name = "SuburbId_Name")
	private String suburbId_Name;

	@Column(name = "CityId")
	private Long cityId;



	@Column(name = "CityId_Name")
	private String cityId_Name;

	@Column(name = "ProvinceId_Name")
	private String provinceId_Name;

	@Column(name = "CountryId_Name")
	private String countryId_Name;

	@Column(name = "ProvinceId")
	private Long provinceId;



	@Column(name = "CountryId")
	private Long countryId;






	public Long getContactPointId() {
		return contactPointId;
	}

	public void setContactPointId(Long contactPointId) {
		this.contactPointId = contactPointId;
	}

	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}

	public Long getParticipantOfficeId() {
		return participantOfficeId;
	}

	public void setParticipantOfficeId(Long participantOfficeId) {
		this.participantOfficeId = participantOfficeId;
	}



	public String getParticipantOfficeId_Name() {
		return participantOfficeId_Name;
	}

	public void setParticipantOfficeId_Name(String participantOfficeId_Name) {
		this.participantOfficeId_Name = participantOfficeId_Name;
	}

	public String getEmailAddress() {
		return emailAddress;
	}

	public void setEmailAddress(String emailAddress) {
		this.emailAddress = emailAddress;
	}

	public String getPhoneNumber() {
		return phoneNumber;
	}

	public void setPhoneNumber(String phoneNumber) {
		this.phoneNumber = phoneNumber;
	}

	public String getAddressLine1() {
		return addressLine1;
	}

	public void setAddressLine1(String addressLine1) {
		this.addressLine1 = addressLine1;
	}

	public String getAddressLine2() {
		return addressLine2;
	}

	public void setAddressLine2(String addressLine2) {
		this.addressLine2 = addressLine2;
	}

	public String getAddressLine3() {
		return addressLine3;
	}

	public void setAddressLine3(String addressLine3) {
		this.addressLine3 = addressLine3;
	}

	public Long getSuburbId() {
		return suburbId;
	}

	public void setSuburbId(Long suburbId) {
		this.suburbId = suburbId;
	}

/***	public Suburb getSuburb() {
		return suburb;
	}

	public void setSuburb(Suburb suburb) {
		this.suburb = suburb;
	} ***/

	public String getSuburbId_Name() {
		return suburbId_Name;
	}

	public void setSuburbId_Name(String suburbId_Name) {
		this.suburbId_Name = suburbId_Name;
	}

	public Long getCityId() {
		return cityId;
	}

	public void setCityId(Long cityId) {
		this.cityId = cityId;
	}

/***	public City getCity_Name() {
		return city_Name;
	}

	public void setCity_Name(City city_Name) {
		this.city_Name = city_Name;
	} ***/

	public String getCityId_Name() {
		return cityId_Name;
	}

	public void setCityId_Name(String cityId_Name) {
		this.cityId_Name = cityId_Name;
	}

	public String getProvinceId_Name() {
		return provinceId_Name;
	}

	public void setProvinceId_Name(String provinceId_Name) {
		this.provinceId_Name = provinceId_Name;
	}

	public String getCountryId_Name() {
		return countryId_Name;
	}

	public void setCountryId_Name(String countryId_Name) {
		this.countryId_Name = countryId_Name;
	}

	public Long getProvinceId() {
		return provinceId;
	}

	public void setProvinceId(Long provinceId) {
		this.provinceId = provinceId;
	}

/***	public Province getProvince_Name() {
		return province_Name;
	}

	public void setProvince_Name(Province province_Name) {
		this.province_Name = province_Name;
	} ***/

	public Long getCountryId() {
		return countryId;
	}

	public void setCountryId(Long countryId) {
		this.countryId = countryId;
	}

/***	public Country getCountry_Name() {
		return country_Name;
	}

	public void setCountry_Name(Country country_Name) {
		this.country_Name = country_Name;
	} ***/


}

/**  javascript      vir grid population        (jsStr)

	var columnsArray = [
		 { data: "contactPointId" }           //0 MySql-TableName: VContactPoint
		,{ data: "name" }                     //1
		,{ data: "participantOfficeId" }      //2
		,{ data: "participantOfficeId_Name" } //3
		,{ data: "emailAddress" }             //4
		,{ data: "phoneNumber" }              //5
		,{ data: "addressLine1" }             //6
		,{ data: "addressLine2" }             //7
		,{ data: "addressLine3" }             //8
		,{ data: "suburbId" }                 //9
		,{ data: "suburbId_Name" }            //10
		,{ data: "cityId" }                   //11
		,{ data: "cityId_Name" }              //12
		,{ data: "provinceId_Name" }          //13
		,{ data: "countryId_Name" }           //14
		,{ data: "provinceId" }               //15
		,{ data: "countryId" }                //16
	];

	var columnDefsArray = [
		{
			visible: false,
			targets: [0, 2, 9, 11, 15, 16]
		}
	];







/**  javascript      vir grid SelectFromGridDialog        (js1Str)

	var columns = [
		{ data: "contactPointId", name: "ContactPointId" }                 //0 MySql-TableName: VContactPoint
		,{ data: "name", name: "Name" }                                     //1
		,{ data: "participantOfficeId", name: "ParticipantOfficeId" }       //2
		,{ data: "participantOfficeId_Name", name: "ParticipantOfficeId_Name" } //3
		,{ data: "emailAddress", name: "EmailAddress" }                     //4
		,{ data: "phoneNumber", name: "PhoneNumber" }                       //5
		,{ data: "addressLine1", name: "AddressLine1" }                     //6
		,{ data: "addressLine2", name: "AddressLine2" }                     //7
		,{ data: "addressLine3", name: "AddressLine3" }                     //8
		,{ data: "suburbId", name: "SuburbId" }                             //9
		,{ data: "suburbId_Name", name: "SuburbId_Name" }                   //10
		,{ data: "cityId", name: "CityId" }                                 //11
		,{ data: "cityId_Name", name: "CityId_Name" }                       //12
		,{ data: "provinceId_Name", name: "ProvinceId_Name" }               //13
		,{ data: "countryId_Name", name: "CountryId_Name" }                 //14
		,{ data: "provinceId", name: "ProvinceId" }                         //15
		,{ data: "countryId", name: "CountryId" }                           //16
	];

	var columnDefs = [
		{
			visible: false,
			targets: [0, 2, 9, 11, 15, 16]
		}
	];







Vir 'n Save Data function sien ContactPoint.java






Vir 'n Populate Data function                                                  (js3Str)

		//  MySql-TableName: VContactPoint										   (js3Str)
		$("#xxxContactPointId").val(data.contactPointId);                 //0
		$("#xxxName").val(data.name);                                     //1
		$("#xxxParticipantOfficeId").val(data.participantOfficeId);       //2
		populateSelect("xxxParticipantOfficeId",                          //name of html select element that will be populated
				"/rest/ignite/v1/participant-office/find-all",            //url
				"participantOfficeId",                                    //the value that must be saved (ReferencedColumnName)
				"name",                                                   //shown to user (usually a Name column)
				data.participantOfficeId,                                 //The selected one, if there is one
				true,                                                     //addEmpty, boolean: should we add empty object at the top
				null                                                      //completeMethod
		);

		$("#xxxParticipantOfficeId_Name").val(data.participantOfficeId_Name); //3
		$("#xxxEmailAddress").val(data.emailAddress);                     //4
		$("#xxxPhoneNumber").val(data.phoneNumber);                       //5
		$("#xxxAddressLine1").val(data.addressLine1);                     //6
		$("#xxxAddressLine2").val(data.addressLine2);                     //7
		$("#xxxAddressLine3").val(data.addressLine3);                     //8
		$("#xxxSuburbId").val(data.suburbId);                             //9
		populateSelect("xxxSuburbId",                                     //name of html select element that will be populated
				"/rest/ignite/v1/suburb/find-all",                        //url
				"suburbId",                                               //the value that must be saved (ReferencedColumnName)
				"name",                                                   //shown to user (usually a Name column)
				data.suburbId,                                            //The selected one, if there is one
				true,                                                     //addEmpty, boolean: should we add empty object at the top
				null                                                      //completeMethod
		);

		$("#xxxSuburbId_Name").val(data.suburbId_Name);                   //10
		$("#xxxCityId").val(data.cityId);                                 //11
		populateSelect("xxxCityId",                                       //name of html select element that will be populated
				"/rest/ignite/v1/city/find-all",                          //url
				"cityId",                                                 //the value that must be saved (ReferencedColumnName)
				"name",                                                   //shown to user (usually a Name column)
				data.cityId,                                              //The selected one, if there is one
				true,                                                     //addEmpty, boolean: should we add empty object at the top
				null                                                      //completeMethod
		);

		$("#xxxCityId_Name").val(data.cityId_Name);                       //12
		$("#xxxProvinceId_Name").val(data.provinceId_Name);               //13
		$("#xxxCountryId_Name").val(data.countryId_Name);                 //14
		$("#xxxProvinceId").val(data.provinceId);                         //15
		populateSelect("xxxProvinceId",                                   //name of html select element that will be populated
				"/rest/ignite/v1/province/find-all",                      //url
				"provinceId",                                             //the value that must be saved (ReferencedColumnName)
				"name",                                                   //shown to user (usually a Name column)
				data.provinceId,                                          //The selected one, if there is one
				true,                                                     //addEmpty, boolean: should we add empty object at the top
				null                                                      //completeMethod
		);

		$("#xxxCountryId").val(data.countryId);                           //16
		populateSelect("xxxCountryId",                                    //name of html select element that will be populated
				"/rest/ignite/v1/country/find-all",                       //url
				"countryId",                                              //the value that must be saved (ReferencedColumnName)
				"name",                                                   //shown to user (usually a Name column)
				data.countryId,                                           //The selected one, if there is one
				true,                                                     //addEmpty, boolean: should we add empty object at the top
				null                                                      //completeMethod
		);







/**  HTML  om 'n grid te populate
												<th>ContactPointId</th>              <!--0  MySql-TableName: VContactPoint-->
												<th>Name</th>                        <!--1  Name-->
												<th>ParticipantOfficeId</th>         <!--2  ParticipantOfficeId-->
												<th>Participant Office Name</th>     <!--3  ParticipantOfficeId_Name-->
												<th>Email Address</th>               <!--4  EmailAddress-->
												<th>Phone Number</th>                <!--5  PhoneNumber-->
												<th>Address Line1</th>               <!--6  AddressLine1-->
												<th>Address Line2</th>               <!--7  AddressLine2-->
												<th>Address Line3</th>               <!--8  AddressLine3-->
												<th>SuburbId</th>                    <!--9  SuburbId-->
												<th>Suburb Name</th>                 <!--10  SuburbId_Name-->
												<th>CityId</th>                      <!--11  CityId-->
												<th>City Name</th>                   <!--12  CityId_Name-->
												<th>Province Name</th>               <!--13  ProvinceId_Name-->
												<th>Country Name</th>                <!--14  CountryId_Name-->
												<th>ProvinceId</th>                  <!--15  ProvinceId-->
												<th>CountryId</th>                   <!--16  CountryId-->

*/