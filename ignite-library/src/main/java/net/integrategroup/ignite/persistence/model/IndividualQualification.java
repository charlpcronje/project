package net.integrategroup.ignite.persistence.model;

import java.io.Serializable;
import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Table;

import com.fasterxml.jackson.databind.annotation.JsonSerialize;

import net.integrategroup.ignite.utils.JsonDateSerializer;

/** @author Generated by Johannes Marais (JohannesSQL v7.7) **/
/** ******* ********* ** 2023-10-16 19:51:56 ******** ** **/

@Entity
@Table(schema = "ig_db", name = "IndividualQualification")
public class IndividualQualification implements Serializable {


    private static final long serialVersionUID = 680788690493422881L; /** ID was Generated by Johannes **/


    @Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	@Column(name = "IndividualQualificationId")
	private Long individualQualificationId;

	@Column(name = "IndividualId")
	private Long individualId;

/***	@OneToOne(targetEntity = Individual.class)
	@JoinColumn(name = "IndividualId", referencedColumnName = "IndividualId", nullable = true, insertable = false, updatable = false)
	private Individual individual; ***/

	@Column(name = "InstituteQualificationId")
	private Long instituteQualificationId;

/***	@OneToOne(targetEntity = InstituteQualification.class)
	@JoinColumn(name = "InstituteQualificationId", referencedColumnName = "InstituteQualificationId", nullable = true, insertable = false, updatable = false)
	private InstituteQualification instituteQualification; ***/

	@Column(name = "YearCompleted")
	private Long yearCompleted;

	@Column(name = "Description")
	private String description;

	@JsonSerialize(using = JsonDateSerializer.class)
	@Column(name = "LastUpdateTimestamp")
	private Date lastUpdateTimestamp;

	@Column(name = "LastUpdateUserName")
	private String lastUpdateUserName;




	public Long getIndividualQualificationId() {
		return individualQualificationId;
	}

	public void setIndividualQualificationId(Long individualQualificationId) {
		this.individualQualificationId = individualQualificationId;
	}

	public Long getIndividualId() {
		return individualId;
	}

	public void setIndividualId(Long individualId) {
		this.individualId = individualId;
	}

/***	public Individual getIndividual() {
		return individual;
	}

	public void setIndividual(Individual individual) {
		this.individual = individual;
	} ***/

	public Long getInstituteQualificationId() {
		return instituteQualificationId;
	}

	public void setInstituteQualificationId(Long instituteQualificationId) {
		this.instituteQualificationId = instituteQualificationId;
	}

/***	public InstituteQualification getInstituteQualification() {
		return instituteQualification;
	}

	public void setInstituteQualification(InstituteQualification instituteQualification) {
		this.instituteQualification = instituteQualification;
	} ***/

	public Long getYearCompleted() {
		return yearCompleted;
	}

	public void setYearCompleted(Long yearCompleted) {
		this.yearCompleted = yearCompleted;
	}

	public String getDescription() {
		return description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	public Date getLastUpdateTimestamp() {
		return lastUpdateTimestamp;
	}

	public void setLastUpdateTimestamp(Date lastUpdateTimestamp) {
		this.lastUpdateTimestamp = lastUpdateTimestamp;
	}

	public String getLastUpdateUserName() {
		return lastUpdateUserName;
	}

	public void setLastUpdateUserName(String lastUpdateUserName) {
		this.lastUpdateUserName = lastUpdateUserName;
	}


}

/**  javascript      vir grid population        (jsStr)

	var columnsArray = [
		 { data: "individualQualificationId" } //0 MySql-TableName: IndividualQualification
		,{ data: "individualId" }             //1
		,{ data: "instituteQualificationId" } //2
		,{ data: "yearCompleted" }            //3
		,{ data: "description" }              //4
		,{ data: "lastUpdateTimestamp" }      //5
		,{ data: "lastUpdateUserName" }       //6
	];

	var columnDefsArray = [
		{
			visible: false,
			targets: [0, 1, 2, 6]
		}
		,{       //for Date columns
			render: function (data, type, row) {
				var html = data;
				if (type == "display") {
					html = timestampToString(data, false);
				}
				return html;
			},
			targets: [5]
		}
	];







/**  javascript      vir grid SelectFromGridDialog        (js1Str)

	var columns = [
		{ data: "individualQualificationId", name: "IndividualQualificationId" } //0 MySql-TableName: IndividualQualification
		,{ data: "individualId", name: "IndividualId" }                     //1
		,{ data: "instituteQualificationId", name: "InstituteQualificationId" } //2
		,{ data: "yearCompleted", name: "YearCompleted" }                   //3
		,{ data: "description", name: "Description" }                       //4
		,{ data: "lastUpdateTimestamp", name: "LastUpdateTimestamp" }       //5
		,{ data: "lastUpdateUserName", name: "LastUpdateUserName" }         //6
	];

	var columnDefs = [
		{
			visible: false,
			targets: [0, 1, 2, 6]
		}
		,{       //for Date columns
			render: function (data, type, row) {
				var html = data;
				if (type == "display") {
					html = timestampToString(data, false);
				}
				return html;
			},
			targets: [5]
		}
	];







Vir 'n Save Data function                        (js2Str)


	var postUrl = "/rest/ignite/v1/individual-qualification/new";
	var postData = {
		individualQualificationId : $("#IndividualQualificationId").val() //0 MySql-TableName: IndividualQualification
		,individualId : $("#IndividualId").val()                                  //1
		,instituteQualificationId : $("#InstituteQualificationId").val()          //2
		,yearCompleted : $("#YearCompleted").val()                                //3
		,description : $("#Description").val()                                    //4
		,lastUpdateTimestamp : getMsFromDatePicker("LastUpdateTimestamp")         //5
	};

	var errors = "";






Vir 'n Populate Data function                                                  (js3Str)

		//  MySql-TableName: IndividualQualification										   (js3Str)
		$("#IndividualQualificationId").val(data.individualQualificationId); //0
		$("#IndividualId").val(data.individualId);                     //1
		populateSelect("IndividualId",                                    //name of html select element that will be populated
				"/rest/ignite/v1/individual/find-all",                    //url
				"individualId",                                           //the value that must be saved (ReferencedColumnName)
				"firstName",                                              //shown to user (usually a Name column)
				data.individualId,                                        //The selected one, if there is one
				true,                                                     //addEmpty, boolean: should we add empty object at the top
				null                                                      //completeMethod
		),

		$("#InstituteQualificationId").val(data.instituteQualificationId); //2
		populateSelect("InstituteQualificationId",                        //name of html select element that will be populated
				"/rest/ignite/v1/institute-qualification/find-all",       //url
				"instituteQualificationId",                               //the value that must be saved (ReferencedColumnName)
				"name",                                                   //shown to user (usually a Name column)
				data.instituteQualificationId,                            //The selected one, if there is one
				true,                                                     //addEmpty, boolean: should we add empty object at the top
				null                                                      //completeMethod
		),

		$("#YearCompleted").val(data.yearCompleted);                   //3
		$("#Description").val(data.description);                       //4
		$("#LastUpdateTimestamp").datepicker("setDate", data.lastUpdateTimestamp == null? timestampToString(new Date(), false) : new Date(data.lastUpdateTimestamp));       //5






/**  HTML  om 'n grid te populate
												<th>IndividualQualificationId</th>   <!--0  MySql-TableName: IndividualQualification-->
												<th>IndividualId</th>                <!--1  IndividualId-->
												<th>InstituteQualificationId</th>    <!--2  InstituteQualificationId-->
												<th>Year Completed</th>              <!--3  YearCompleted-->
												<th>Description</th>                 <!--4  Description-->
												<th>Last Update Timestamp</th>       <!--5  LastUpdateTimestamp-->
												<th>LastUpdateUserName</th>          <!--6  LastUpdateUserName-->

*/