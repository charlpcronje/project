package net.integrategroup.ignite.persistence.model;

import java.io.Serializable;
import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Table;

import com.fasterxml.jackson.databind.annotation.JsonSerialize;

import net.integrategroup.ignite.utils.JsonDateSerializer;

/** @author Generated by Johannes Marais (JohannesSQL v7.7) **/
/** ******* ********* ** 2023-10-25 18:51:28 ******** *xxx* **/

@Entity
@Table(schema = "ig_db", name = "IndividualSdRole")
public class IndividualSdRole implements Serializable {


    private static final long serialVersionUID = 657611198997224278L; /** ID was Generated by Johannes **/


    @Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	@Column(name = "IndividualSdRoleId")
	private Long individualSdRoleId;

	@Column(name = "IndividualId")
	private Long individualId;

/***	@OneToOne(targetEntity = Individual.class)
	@JoinColumn(name = "IndividualId", referencedColumnName = "IndividualId", nullable = true, insertable = false, updatable = false)
	private Individual individual; ***/

	@Column(name = "SdRoleId")
	private Long sdRoleId;

/***	@OneToOne(targetEntity = SdRole.class)
	@JoinColumn(name = "SdRoleId", referencedColumnName = "SdRoleId", nullable = true, insertable = false, updatable = false)
	private SdRole sdRole; ***/

	@Column(name = "CompetencyLevelId")
	private Long competencyLevelId;

/***	@OneToOne(targetEntity = CompetencyLevel.class)
	@JoinColumn(name = "CompetencyLevelId", referencedColumnName = "CompetencyLevelId", nullable = true, insertable = false, updatable = false)
	private CompetencyLevel competencyLevel; ***/

	@Column(name = "YearExperience")
	private Long yearExperience;

	@JsonSerialize(using = JsonDateSerializer.class)
	@Column(name = "LastUpdateTimestamp")
	private Date lastUpdateTimestamp;

	@Column(name = "LastUpdateUserName")
	private String lastUpdateUserName;




	public Long getIndividualSdRoleId() {
		return individualSdRoleId;
	}

	public void setIndividualSdRoleId(Long individualSdRoleId) {
		this.individualSdRoleId = individualSdRoleId;
	}

	public Long getIndividualId() {
		return individualId;
	}

	public void setIndividualId(Long individualId) {
		this.individualId = individualId;
	}

/***	public Individual getIndividual() {
		return individual;
	}

	public void setIndividual(Individual individual) {
		this.individual = individual;
	} ***/

	public Long getSdRoleId() {
		return sdRoleId;
	}

	public void setSdRoleId(Long sdRoleId) {
		this.sdRoleId = sdRoleId;
	}

/***	public SdRole getSdRole() {
		return sdRole;
	}

	public void setSdRole(SdRole sdRole) {
		this.sdRole = sdRole;
	} ***/

	public Long getCompetencyLevelId() {
		return competencyLevelId;
	}

	public void setCompetencyLevelId(Long competencyLevelId) {
		this.competencyLevelId = competencyLevelId;
	}

/***	public CompetencyLevel getCompetencyLevel() {
		return competencyLevel;
	}

	public void setCompetencyLevel(CompetencyLevel competencyLevel) {
		this.competencyLevel = competencyLevel;
	} ***/

	public Long getYearExperience() {
		return yearExperience;
	}

	public void setYearExperience(Long yearExperience) {
		this.yearExperience = yearExperience;
	}

	public Date getLastUpdateTimestamp() {
		return lastUpdateTimestamp;
	}

	public void setLastUpdateTimestamp(Date lastUpdateTimestamp) {
		this.lastUpdateTimestamp = lastUpdateTimestamp;
	}

	public String getLastUpdateUserName() {
		return lastUpdateUserName;
	}

	public void setLastUpdateUserName(String lastUpdateUserName) {
		this.lastUpdateUserName = lastUpdateUserName;
	}


}

/**  javascript      vir grid population        (jsStr)

	var columnsArray = [
		 { data: "individualSdRoleId" }       //0 MySql-TableName: IndividualSdRole
		,{ data: "individualId" }             //1
		,{ data: "sdRoleId" }                 //2
		,{ data: "competencyLevelId" }        //3
		,{ data: "yearExperience" }           //4
		,{ data: "lastUpdateTimestamp" }      //5
		,{ data: "lastUpdateUserName" }       //6
	];

	var columnDefsArray = [
		{
			visible: false,
			targets: [0, 1, 2, 3, 6]
		}
		,{       //for Date columns
			render: function (data, type, row) {
				var html = data;
				if (type == "display") {
					html = timestampToString(data, false);
				}
				return html;
			},
			targets: [5]
		}
	];







/**  javascript      vir grid SelectFromGridDialog        (js1Str)

	var columns = [
		{ data: "individualSdRoleId", name: "IndividualSdRoleId" }         //0 MySql-TableName: IndividualSdRole
		,{ data: "individualId", name: "IndividualId" }                     //1
		,{ data: "sdRoleId", name: "SdRoleId" }                             //2
		,{ data: "competencyLevelId", name: "CompetencyLevelId" }           //3
		,{ data: "yearExperience", name: "YearExperience" }                 //4
		,{ data: "lastUpdateTimestamp", name: "LastUpdateTimestamp" }       //5
		,{ data: "lastUpdateUserName", name: "LastUpdateUserName" }         //6
	];

	var columnDefs = [
		{
			visible: false,
			targets: [0, 1, 2, 3, 6]
		}
		,{       //for Date columns
			render: function (data, type, row) {
				var html = data;
				if (type == "display") {
					html = timestampToString(data, false);
				}
				return html;
			},
			targets: [5]
		}
	];







Vir 'n Save Data function                        (js2Str)


	var postUrl = "/rest/ignite/v1/individual-sd-role/new";
	var postData = {
		individualSdRoleId : $("#xxxIndividualSdRoleId").val()       //0 MySql-TableName: IndividualSdRole
		,individualId : $("#xxxIndividualId").val()                                  //1
		,sdRoleId : $("#xxxSdRoleId").val()                                          //2
		,competencyLevelId : $("#xxxCompetencyLevelId").val()                        //3
		,yearExperience : $("#xxxYearExperience").val()                              //4
		,lastUpdateTimestamp : getMsFromDatePicker("xxxLastUpdateTimestamp")         //5
	};

	var errors = "";






Vir 'n Populate Data function                                                  (js3Str)

		//  MySql-TableName: IndividualSdRole										   (js3Str)
		$("#xxxIndividualSdRoleId").val(data.individualSdRoleId);         //0
		$("#xxxIndividualId").val(data.individualId);                     //1
		populateSelect("xxxIndividualId",                                 //name of html select element that will be populated
				"/rest/ignite/v1/individual/find-all",                    //url
				"individualId",                                           //the value that must be saved (ReferencedColumnName)
				"firstName",                                              //shown to user (usually a Name column)
				data.individualId,                                        //The selected one, if there is one
				true,                                                     //addEmpty, boolean: should we add empty object at the top
				null                                                      //completeMethod
		);

		$("#xxxSdRoleId").val(data.sdRoleId);                             //2
		populateSelect("xxxSdRoleId",                                     //name of html select element that will be populated
				"/rest/ignite/v1/sd-role/find-all",                       //url
				"sdRoleId",                                               //the value that must be saved (ReferencedColumnName)
				"lastUpdateUserName",                                     //shown to user (usually a Name column)
				data.sdRoleId,                                            //The selected one, if there is one
				true,                                                     //addEmpty, boolean: should we add empty object at the top
				null                                                      //completeMethod
		);

		$("#xxxCompetencyLevelId").val(data.competencyLevelId);           //3
		populateSelect("xxxCompetencyLevelId",                            //name of html select element that will be populated
				"/rest/ignite/v1/competency-level/find-all",              //url
				"competencyLevelId",                                      //the value that must be saved (ReferencedColumnName)
				"name",                                                   //shown to user (usually a Name column)
				data.competencyLevelId,                                   //The selected one, if there is one
				true,                                                     //addEmpty, boolean: should we add empty object at the top
				null                                                      //completeMethod
		);

		$("#xxxYearExperience").val(data.yearExperience);                 //4
		$("#xxxLastUpdateTimestamp").datepicker("setDate", data.lastUpdateTimestamp == null? timestampToString(new Date(), false) : new Date(data.lastUpdateTimestamp));       //5






/**  HTML  om 'n grid te populate
												<th>IndividualSdRoleId</th>          <!--0  MySql-TableName: IndividualSdRole-->
												<th>IndividualId</th>                <!--1  IndividualId-->
												<th>SdRoleId</th>                    <!--2  SdRoleId-->
												<th>CompetencyLevelId</th>           <!--3  CompetencyLevelId-->
												<th>Year Experience</th>             <!--4  YearExperience-->
												<th>Last Update Timestamp</th>       <!--5  LastUpdateTimestamp-->
												<th>LastUpdateUserName</th>          <!--6  LastUpdateUserName-->

*/