package net.integrategroup.ignite.persistence.model;

import java.io.Serializable;
import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Table;

import com.fasterxml.jackson.databind.annotation.JsonSerialize;

import net.integrategroup.ignite.utils.JsonDateSerializer;

/** @author Generated by Johannes Marais (JohannesSQL v7.7) **/
/** ******* ********* ** 2023-10-25 18:57:31 ******** *xxx* **/

@Entity
@Table(schema = "ig_db", name = "ProjectStageType")
public class ProjectStageType implements Serializable {


    private static final long serialVersionUID = 773177905343493444L; /** ID was Generated by Johannes **/


    @Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	@Column(name = "ProjectStageTypeId")
	private Long projectStageTypeId;

	@Column(name = "ProjectStageTypeCode")
	private String projectStageTypeCode;

/***	@OneToOne(targetEntity = ProjectStageType.class)
	@JoinColumn(name = "ProjectStageTypeCode", referencedColumnName = "ProjectStageTypeCode", nullable = true, insertable = false, updatable = false)
	private ProjectStageType projectStageType; ***/

	@Column(name = "Name")
	private String name;

	@Column(name = "Description")
	private String description;

	@JsonSerialize(using = JsonDateSerializer.class)
	@Column(name = "LastUpdateTimestamp")
	private Date lastUpdateTimestamp;

	@Column(name = "LastUpdateUserName")
	private String lastUpdateUserName;




	public Long getProjectStageTypeId() {
		return projectStageTypeId;
	}

	public void setProjectStageTypeId(Long projectStageTypeId) {
		this.projectStageTypeId = projectStageTypeId;
	}

	public String getProjectStageTypeCode() {
		return projectStageTypeCode;
	}

	public void setProjectStageTypeCode(String projectStageTypeCode) {
		this.projectStageTypeCode = projectStageTypeCode;
	}

/***	public ProjectStageType getProjectStageType() {
		return projectStageType;
	}

	public void setProjectStageType(ProjectStageType projectStageType) {
		this.projectStageType = projectStageType;
	} ***/

	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}

	public String getDescription() {
		return description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	public Date getLastUpdateTimestamp() {
		return lastUpdateTimestamp;
	}

	public void setLastUpdateTimestamp(Date lastUpdateTimestamp) {
		this.lastUpdateTimestamp = lastUpdateTimestamp;
	}

	public String getLastUpdateUserName() {
		return lastUpdateUserName;
	}

	public void setLastUpdateUserName(String lastUpdateUserName) {
		this.lastUpdateUserName = lastUpdateUserName;
	}


}

/**  javascript      vir grid population        (jsStr)

	var columnsArray = [
		 { data: "projectStageTypeId" }       //0 MySql-TableName: ProjectStageType
		,{ data: "projectStageTypeCode" }     //1
		,{ data: "name" }                     //2
		,{ data: "description" }              //3
		,{ data: "lastUpdateTimestamp" }      //4
		,{ data: "lastUpdateUserName" }       //5
	];

	var columnDefsArray = [
		{
			visible: false,
			targets: [0, 1, 5]
		}
		,{       //for Date columns
			render: function (data, type, row) {
				var html = data;
				if (type == "display") {
					html = timestampToString(data, false);
				}
				return html;
			},
			targets: [4]
		}
	];







/**  javascript      vir grid SelectFromGridDialog        (js1Str)

	var columns = [
		{ data: "projectStageTypeId", name: "ProjectStageTypeId" }         //0 MySql-TableName: ProjectStageType
		,{ data: "projectStageTypeCode", name: "ProjectStageTypeCode" }     //1
		,{ data: "name", name: "Name" }                                     //2
		,{ data: "description", name: "Description" }                       //3
		,{ data: "lastUpdateTimestamp", name: "LastUpdateTimestamp" }       //4
		,{ data: "lastUpdateUserName", name: "LastUpdateUserName" }         //5
	];

	var columnDefs = [
		{
			visible: false,
			targets: [0, 1, 5]
		}
		,{       //for Date columns
			render: function (data, type, row) {
				var html = data;
				if (type == "display") {
					html = timestampToString(data, false);
				}
				return html;
			},
			targets: [4]
		}
	];







Vir 'n Save Data function                        (js2Str)


	var postUrl = "/rest/ignite/v1/project-stage-type/new";
	var postData = {
		projectStageTypeId : $("#xxxProjectStageTypeId").val()       //0 MySql-TableName: ProjectStageType
		,projectStageTypeCode : $("#xxxProjectStageTypeCode").val()                  //1
		,name : $("#xxxName").val()                                                  //2
		,description : $("#xxxDescription").val()                                    //3
		,lastUpdateTimestamp : getMsFromDatePicker("xxxLastUpdateTimestamp")         //4
	};

	var errors = "";






Vir 'n Populate Data function                                                  (js3Str)

		//  MySql-TableName: ProjectStageType										   (js3Str)
		$("#xxxProjectStageTypeId").val(data.projectStageTypeId);         //0
		$("#xxxProjectStageTypeCode").val(data.projectStageTypeCode);     //1
		populateSelect("xxxProjectStageTypeCode",                         //name of html select element that will be populated
				"/rest/ignite/v1/project-stage-type/find-all",            //url
				"projectStageTypeCode",                                   //the value that must be saved (ReferencedColumnName)
				"name",                                                   //shown to user (usually a Name column)
				data.projectStageTypeCode,                                //The selected one, if there is one
				true,                                                     //addEmpty, boolean: should we add empty object at the top
				null                                                      //completeMethod
		);

		$("#xxxName").val(data.name);                                     //2
		$("#xxxDescription").val(data.description);                       //3
		$("#xxxLastUpdateTimestamp").datepicker("setDate", data.lastUpdateTimestamp == null? timestampToString(new Date(), false) : new Date(data.lastUpdateTimestamp));       //4






/**  HTML  om 'n grid te populate
												<th>ProjectStageTypeId</th>          <!--0  MySql-TableName: ProjectStageType-->
												<th>ProjectStageTypeCode</th>        <!--1  ProjectStageTypeCode-->
												<th>Name</th>                        <!--2  Name-->
												<th>Description</th>                 <!--3  Description-->
												<th>Last Update Timestamp</th>       <!--4  LastUpdateTimestamp-->
												<th>LastUpdateUserName</th>          <!--5  LastUpdateUserName-->

*/