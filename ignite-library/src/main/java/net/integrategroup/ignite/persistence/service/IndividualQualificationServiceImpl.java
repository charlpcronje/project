package net.integrategroup.ignite.persistence.service;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import net.integrategroup.ignite.persistence.model.IndividualQualification;
import net.integrategroup.ignite.persistence.model.VIndividualQualification;
import net.integrategroup.ignite.persistence.repository.IndividualQualificationRepository;

/** @author Generated by Johannes Marais (JohannesSQL v7.7) **/
/** ******* ********* ** 2023-10-16 19:51:56 ******** ***** **/

@Service
public class IndividualQualificationServiceImpl implements IndividualQualificationService {

	@Autowired
	IndividualQualificationRepository individualQualificationRepository;

	@Override
	public List<IndividualQualification> findAll() {
		return individualQualificationRepository.findAll();
	}

	@Override
	public IndividualQualification getByIndividualQualificationId(Long individualQualificationId) {
		return individualQualificationRepository.getByIndividualQualificationId(individualQualificationId);
	}

	@Override
	public IndividualQualification save(IndividualQualification individualQualification) {
		return individualQualificationRepository.save(individualQualification);
	}

//	@Override                               //One record from View
//	public VIndividualQualification getByVIndividualQualificationId(Long individualQualificationId) {
//		return individualQualificationRepository.getByVIndividualQualificationId(individualQualificationId);
//	}


//	@Override								//All in view
//	public List<VIndividualQualification> findListAllInView() {
//		return individualQualificationRepository.findListAllInView();
//	}

//	@Override								//List from View without parameter
//	public List<VIndividualQualification> findListIndividualQualificationXXX() {
//		return individualQualificationRepository.findListVIndividualQualificationXXX();
//	}

	@Override								//List from View that needs parameter
	public List<VIndividualQualification> findListVIndividualQualificationForParticipant(Long participantId) {
		return individualQualificationRepository.findListVIndividualQualificationForParticipant(participantId);
	}

//	@Override								//List from View that needs multiple parameters
//	public List<VIndividualQualification> findListIndividualQualificationXXX(Long paramId, String paramName, String paramName2) {
//		return individualQualificationRepository.findListVIndividualQualificationXXX(paramId, paramName, paramName2);
//	}

//	@Override								//List from View that needs date parameters
//	public List<VIndividualQualification> findListIndividualQualificationXXX(Long paramId, Date fd, Date ld) {
//		return individualQualificationRepository.findListVIndividualQualificationXXX(paramId, fd, ld);
//	}



	@Override
	public List<IndividualQualification> findListIndividualQualificationForIndividualId(Long individualId) {
		return individualQualificationRepository.findListIndividualQualificationForIndividualId(individualId);
	}

	@Override
	public List<IndividualQualification> findListIndividualQualificationForInstituteQualificationId(Long instituteQualificationId) {
		return individualQualificationRepository.findListIndividualQualificationForInstituteQualificationId(instituteQualificationId);
	}



}