package net.integrategroup.ignite.persistence.model;

import java.io.Serializable;
import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Table;

import com.fasterxml.jackson.databind.annotation.JsonSerialize;

import net.integrategroup.ignite.utils.JsonDateSerializer;

/** @author Generated by Johannes Marais (JohannesSQL v7.7) **/
/** ******* ********* ** 2023-10-25 18:44:00 ******** *c* **/

@Entity
@Table(schema = "ig_db", name = "CompetencyLevel")
public class CompetencyLevel implements Serializable {


    private static final long serialVersionUID = 207443910317304041L; /** ID was Generated by Johannes **/


    @Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	@Column(name = "CompetencyLevelId")
	private Long competencyLevelId;

	@Column(name = "Name")
	private String name;

	@Column(name = "Description")
	private String description;

	@JsonSerialize(using = JsonDateSerializer.class)
	@Column(name = "LastUpdateTimestamp")
	private Date lastUpdateTimestamp;

	@Column(name = "LastUpdateUserName")
	private String lastUpdateUserName;




	public Long getCompetencyLevelId() {
		return competencyLevelId;
	}

	public void setCompetencyLevelId(Long competencyLevelId) {
		this.competencyLevelId = competencyLevelId;
	}

	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}

	public String getDescription() {
		return description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	public Date getLastUpdateTimestamp() {
		return lastUpdateTimestamp;
	}

	public void setLastUpdateTimestamp(Date lastUpdateTimestamp) {
		this.lastUpdateTimestamp = lastUpdateTimestamp;
	}

	public String getLastUpdateUserName() {
		return lastUpdateUserName;
	}

	public void setLastUpdateUserName(String lastUpdateUserName) {
		this.lastUpdateUserName = lastUpdateUserName;
	}


}

/**  javascript      vir grid population        (jsStr)

	var columnsArray = [
		 { data: "competencyLevelId" }        //0 MySql-TableName: CompetencyLevel
		,{ data: "name" }                     //1
		,{ data: "description" }              //2
		,{ data: "lastUpdateTimestamp" }      //3
		,{ data: "lastUpdateUserName" }       //4
	];

	var columnDefsArray = [
		{
			visible: false,
			targets: [0, 4]
		}
		,{       //for Date columns
			render: function (data, type, row) {
				var html = data;
				if (type == "display") {
					html = timestampToString(data, false);
				}
				return html;
			},
			targets: [3]
		}
	];







/**  javascript      vir grid SelectFromGridDialog        (js1Str)

	var columns = [
		{ data: "competencyLevelId", name: "CompetencyLevelId" }           //0 MySql-TableName: CompetencyLevel
		,{ data: "name", name: "Name" }                                     //1
		,{ data: "description", name: "Description" }                       //2
		,{ data: "lastUpdateTimestamp", name: "LastUpdateTimestamp" }       //3
		,{ data: "lastUpdateUserName", name: "LastUpdateUserName" }         //4
	];

	var columnDefs = [
		{
			visible: false,
			targets: [0, 4]
		}
		,{       //for Date columns
			render: function (data, type, row) {
				var html = data;
				if (type == "display") {
					html = timestampToString(data, false);
				}
				return html;
			},
			targets: [3]
		}
	];







Vir 'n Save Data function                        (js2Str)


	var postUrl = "/rest/ignite/v1/competency-level/new";
	var postData = {
		competencyLevelId : $("#cCompetencyLevelId").val()        //0 MySql-TableName: CompetencyLevel
		,name : $("#cName").val()                                                  //1
		,description : $("#cDescription").val()                                    //2
		,lastUpdateTimestamp : getMsFromDatePicker("cLastUpdateTimestamp")         //3
	};

	var errors = "";






Vir 'n Populate Data function                                                  (js3Str)

		//  MySql-TableName: CompetencyLevel										   (js3Str)
		$("#cCompetencyLevelId").val(data.competencyLevelId);           //0
		$("#cName").val(data.name);                                     //1
		$("#cDescription").val(data.description);                       //2
		$("#cLastUpdateTimestamp").datepicker("setDate", data.lastUpdateTimestamp == null? timestampToString(new Date(), false) : new Date(data.lastUpdateTimestamp));       //3






/**  HTML  om 'n grid te populate
												<th>CompetencyLevelId</th>           <!--0  MySql-TableName: CompetencyLevel-->
												<th>Name</th>                        <!--1  Name-->
												<th>Description</th>                 <!--2  Description-->
												<th>Last Update Timestamp</th>       <!--3  LastUpdateTimestamp-->
												<th>LastUpdateUserName</th>          <!--4  LastUpdateUserName-->

*/