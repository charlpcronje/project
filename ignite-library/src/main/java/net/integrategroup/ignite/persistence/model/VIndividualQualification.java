package net.integrategroup.ignite.persistence.model;

import java.io.Serializable;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;

/** @author Generated by Johannes Marais (JohannesSQL v7.7) **/
/** ******* ********* ** 2023-10-17 17:18:56 ******** *iq* **/

@Entity
@Table(schema = "ig_db", name = "vIndividualQualification")
public class VIndividualQualification implements Serializable {


    private static final long serialVersionUID = 570830043291190395L; /** ID was Generated by Johannes **/


    @Id
	@Column(name = "IndividualQualificationId")
	private Long individualQualificationId;

	@Column(name = "IndividualId")
	private Long individualId;

/***	@OneToOne(targetEntity = Individual.class)
	@JoinColumn(name = "IndividualId", referencedColumnName = "IndividualId", nullable = true, insertable = false, updatable = false)
	private Individual individual; ***/

	@Column(name = "IndividualId_FirstName")
	private String individualId_FirstName;

	@Column(name = "IndividualId_LastName")
	private String individualId_LastName;

	@Column(name = "ParticipantId")
	private Long participantId;

/***	@OneToOne(targetEntity = Participant.class)
	@JoinColumn(name = "ParticipantId", referencedColumnName = "ParticipantId", nullable = true, insertable = false, updatable = false)
	private Participant participant_LastName; ***/

	@Column(name = "InstituteQualificationId")
	private Long instituteQualificationId;

/***	@OneToOne(targetEntity = InstituteQualification.class)
	@JoinColumn(name = "InstituteQualificationId", referencedColumnName = "InstituteQualificationId", nullable = true, insertable = false, updatable = false)
	private InstituteQualification instituteQualification_LastName; ***/

	@Column(name = "InstituteQualificationId_Name")
	private String instituteQualificationId_Name;

	@Column(name = "StudyInstituteId_Name")
	private String studyInstituteId_Name;

	@Column(name = "YearCompleted")
	private Long yearCompleted;

	@Column(name = "Description")
	private String description;

	@Column(name = "CombinedQualification")
	private String combinedQualification;




	public Long getIndividualQualificationId() {
		return individualQualificationId;
	}

	public void setIndividualQualificationId(Long individualQualificationId) {
		this.individualQualificationId = individualQualificationId;
	}

	public Long getIndividualId() {
		return individualId;
	}

	public void setIndividualId(Long individualId) {
		this.individualId = individualId;
	}

/***	public Individual getIndividual() {
		return individual;
	}

	public void setIndividual(Individual individual) {
		this.individual = individual;
	} ***/

	public String getIndividualId_FirstName() {
		return individualId_FirstName;
	}

	public void setIndividualId_FirstName(String individualId_FirstName) {
		this.individualId_FirstName = individualId_FirstName;
	}

	public String getIndividualId_LastName() {
		return individualId_LastName;
	}

	public void setIndividualId_LastName(String individualId_LastName) {
		this.individualId_LastName = individualId_LastName;
	}

	public Long getParticipantId() {
		return participantId;
	}

	public void setParticipantId(Long participantId) {
		this.participantId = participantId;
	}

/***	public Participant getParticipant_LastName() {
		return participant_LastName;
	}

	public void setParticipant_LastName(Participant participant_LastName) {
		this.participant_LastName = participant_LastName;
	} ***/

	public Long getInstituteQualificationId() {
		return instituteQualificationId;
	}

	public void setInstituteQualificationId(Long instituteQualificationId) {
		this.instituteQualificationId = instituteQualificationId;
	}

/***	public InstituteQualification getInstituteQualification_LastName() {
		return instituteQualification_LastName;
	}

	public void setInstituteQualification_LastName(InstituteQualification instituteQualification_LastName) {
		this.instituteQualification_LastName = instituteQualification_LastName;
	} ***/

	public String getInstituteQualificationId_Name() {
		return instituteQualificationId_Name;
	}

	public void setInstituteQualificationId_Name(String instituteQualificationId_Name) {
		this.instituteQualificationId_Name = instituteQualificationId_Name;
	}

	public String getStudyInstituteId_Name() {
		return studyInstituteId_Name;
	}

	public void setStudyInstituteId_Name(String studyInstituteId_Name) {
		this.studyInstituteId_Name = studyInstituteId_Name;
	}

	public Long getYearCompleted() {
		return yearCompleted;
	}

	public void setYearCompleted(Long yearCompleted) {
		this.yearCompleted = yearCompleted;
	}

	public String getDescription() {
		return description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	public String getCombinedQualification() {
		return combinedQualification;
	}

	public void setCombinedQualification(String combinedQualification) {
		this.combinedQualification = combinedQualification;
	}


}

/**  javascript      vir grid population        (jsStr)

	var columnsArray = [
		 { data: "individualQualificationId" } //0 MySql-TableName: VIndividualQualification
		,{ data: "individualId" }             //1
		,{ data: "individualId_FirstName" }   //2
		,{ data: "individualId_LastName" }    //3
		,{ data: "participantId" }            //4
		,{ data: "instituteQualificationId" } //5
		,{ data: "instituteQualificationId_Name" } //6
		,{ data: "studyInstituteId_Name" }    //7
		,{ data: "yearCompleted" }            //8
		,{ data: "description" }              //9
		,{ data: "combinedQualification" }    //10
	];

	var columnDefsArray = [
		{
			visible: false,
			targets: [0, 1, 2, 3, 4, 5]
		}
	];







/**  javascript      vir grid SelectFromGridDialog        (js1Str)

	var columns = [
		{ data: "individualQualificationId", name: "IndividualQualificationId" } //0 MySql-TableName: VIndividualQualification
		,{ data: "individualId", name: "IndividualId" }                     //1
		,{ data: "individualId_FirstName", name: "IndividualId_FirstName" } //2
		,{ data: "individualId_LastName", name: "IndividualId_LastName" }   //3
		,{ data: "participantId", name: "ParticipantId" }                   //4
		,{ data: "instituteQualificationId", name: "InstituteQualificationId" } //5
		,{ data: "instituteQualificationId_Name", name: "InstituteQualificationId_Name" } //6
		,{ data: "studyInstituteId_Name", name: "StudyInstituteId_Name" }   //7
		,{ data: "yearCompleted", name: "YearCompleted" }                   //8
		,{ data: "description", name: "Description" }                       //9
		,{ data: "combinedQualification", name: "CombinedQualification" }   //10
	];

	var columnDefs = [
		{
			visible: false,
			targets: [0, 1, 2, 3, 4, 5]
		}
	];







Vir 'n Save Data function sien IndividualQualification.java






Vir 'n Populate Data function                                                  (js3Str)

		//  MySql-TableName: VIndividualQualification										   (js3Str)
		$("#iqIndividualQualificationId").val(data.individualQualificationId); //0
		$("#iqIndividualId").val(data.individualId);                     //1
		populateSelect("iqIndividualId",                                  //name of html select element that will be populated
				"/rest/ignite/v1/individual/find-all",                    //url
				"individualId",                                           //the value that must be saved (ReferencedColumnName)
				"firstName",                                              //shown to user (usually a Name column)
				data.individualId,                                        //The selected one, if there is one
				true,                                                     //addEmpty, boolean: should we add empty object at the top
				null                                                      //completeMethod
		),

		$("#iqIndividualId_FirstName").val(data.individualId_FirstName); //2
		$("#iqIndividualId_LastName").val(data.individualId_LastName);   //3
		$("#iqParticipantId").val(data.participantId);                   //4
		populateSelect("iqParticipantId",                                 //name of html select element that will be populated
				"/rest/ignite/v1/participant/find-all",                   //url
				"participantId",                                          //the value that must be saved (ReferencedColumnName)
				"systemName",                                             //shown to user (usually a Name column)
				data.participantId,                                       //The selected one, if there is one
				true,                                                     //addEmpty, boolean: should we add empty object at the top
				null                                                      //completeMethod
		),

		$("#iqInstituteQualificationId").val(data.instituteQualificationId); //5
		populateSelect("iqInstituteQualificationId",                      //name of html select element that will be populated
				"/rest/ignite/v1/institute-qualification/find-all",       //url
				"instituteQualificationId",                               //the value that must be saved (ReferencedColumnName)
				"name",                                                   //shown to user (usually a Name column)
				data.instituteQualificationId,                            //The selected one, if there is one
				true,                                                     //addEmpty, boolean: should we add empty object at the top
				null                                                      //completeMethod
		),

		$("#iqInstituteQualificationId_Name").val(data.instituteQualificationId_Name); //6
		$("#iqStudyInstituteId_Name").val(data.studyInstituteId_Name);   //7
		$("#iqYearCompleted").val(data.yearCompleted);                   //8
		$("#iqDescription").val(data.description);                       //9
		$("#iqCombinedQualification").val(data.combinedQualification);   //10






/**  HTML  om 'n grid te populate
												<th>IndividualQualificationId</th>   <!--0  MySql-TableName: VIndividualQualification-->
												<th>IndividualId</th>                <!--1  IndividualId-->
												<th>Individual First Name</th>       <!--2  IndividualId_FirstName-->
												<th>Individual Last Name</th>        <!--3  IndividualId_LastName-->
												<th>ParticipantId</th>               <!--4  ParticipantId-->
												<th>InstituteQualificationId</th>    <!--5  InstituteQualificationId-->
												<th>Institute Qualification Name</th> <!--6  InstituteQualificationId_Name-->
												<th>Study Institute Name</th>        <!--7  StudyInstituteId_Name-->
												<th>Year Completed</th>              <!--8  YearCompleted-->
												<th>Description</th>                 <!--9  Description-->
												<th>Combined Qualification</th>      <!--10  CombinedQualification-->

*/