package net.integrategroup.ignite.persistence.repository;

import java.util.List;

import org.springframework.data.jpa.repository.Query;
import org.springframework.data.repository.CrudRepository;
import org.springframework.stereotype.Repository;

import net.integrategroup.ignite.persistence.model.IndividualProfRegistration;
import net.integrategroup.ignite.persistence.model.VIndividualProfRegistration;


/** @author Generated by Johannes Marais (JohannesSQL v7.7) **/
/** ******* ********* ** 2023-10-16 19:51:56 ******** ***** **/

@Repository
public interface IndividualProfRegistrationRepository extends CrudRepository<IndividualProfRegistration, Long> {

	@Override
	List<IndividualProfRegistration> findAll();

	@Query("Select i   FROM  IndividualProfRegistration i    WHERE  i.individualProfRegistrationId = ?1")
	IndividualProfRegistration getByIndividualProfRegistrationId(Long individualProfRegistrationId);


//	@Query("Select v   FROM  VIndividualProfRegistration v   WHERE  v.individualProfRegistrationId = ?1")       //One record from View
//	VIndividualProfRegistration getByVIndividualProfRegistrationId(Long individualProfRegistrationId);





//	@Query("SELECT v FROM VIndividualProfRegistration v")									//All in view
//	List<VIndividualProfRegistration> findListAllInView();

//	@Query("SELECT v FROM VIndividualProfRegistration v WHERE v.columnName = 'XXX'")		//List from View without parameter
//	List<VIndividualProfRegistration> findListVIndividualProfRegistrationXXX();

	@Query("SELECT v FROM VIndividualProfRegistration v WHERE v.participantId = ?1")				//List from View that needs parameter
	List<VIndividualProfRegistration> findListVIndividualProfRegistrationForParticipant(Long participantId);

//	@Query("SELECT v FROM VIndividualProfRegistration v WHERE v.columnName = ?1 AND v.columnName = ?2 and v.columnName = ?3")	//List from View that needs multiple parameters
//	List<VIndividualProfRegistration> findListVIndividualProfRegistrationXXX(Long paramId, String paramName, String paramName2);

//	@Query("SELECT v FROM VIndividualProfRegistration v "									//List from View that needs date parameters
//		" WHERE    v.paramId = ?1 "
//		" AND      v.paramDate  BETWEEN ?2 AND ?3 "
//		" ORDER BY v.paramDate ")
//	List<VIndividualProfRegistration> findListVIndividualProfRegistrationXXX(Long paramId, Date fd, Date ld);




	@Query("Select i   FROM  IndividualProfRegistration i    WHERE  i.individualId = ?1")
	List<IndividualProfRegistration> findListIndividualProfRegistrationForIndividualId(Long individualId);

	@Query("Select i   FROM  IndividualProfRegistration i    WHERE  i.professionalInstituteId = ?1")
	List<IndividualProfRegistration> findListIndividualProfRegistrationForProfessionalInstituteId(Long professionalInstituteId);


}