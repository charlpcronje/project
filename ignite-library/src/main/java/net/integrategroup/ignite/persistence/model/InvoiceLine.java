package net.integrategroup.ignite.persistence.model;

import java.io.Serializable;
import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Table;

import com.fasterxml.jackson.databind.annotation.JsonSerialize;

import net.integrategroup.ignite.utils.JsonDateSerializer;

/** @author Generated by Johannes Marais (JohannesSQL v7.5) **/
/** ******* ********* ** 2023-09-04 14:34:56 ******** ** **/
/** ******* ********* ** Ingrid 2023-09-07 ******** ** **/

@Entity
@Table(schema = "ig_db", name = "InvoiceLine")
public class InvoiceLine implements Serializable {


    private static final long serialVersionUID = 859151859844470979L; /** ID was Generated by Johannes **/

    @Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	@Column(name = "InvoiceLineId")
	private Long invoiceLineId;

	@Column(name = "InvoiceId")
	private Long invoiceId;

	@Column(name = "ProjectId")
	private Long projectId;

	@Column(name = "LineType")
	private String lineType;

	@Column(name = "RatesMissing")
	private Integer ratesMissing;

	@Column(name = "TotalUnits")
	private Double totalUnits;

	@Column(name = "LineAmount")
	private Double lineAmount;

	@Column(name = "LastUpdateUserName")
	private String lastUpdateUserName;

	@JsonSerialize(using = JsonDateSerializer.class)
	@Column(name = "LastUpdateTimestamp")
	private Date lastUpdateTimestamp;

	@Column(name = "AgreementBetweenParticipantsId")
	private Long agreementBetweenParticipantsId;


	public Long getAgreementBetweenParticipantsId() {
		return agreementBetweenParticipantsId;
	}

	public void setAgreementBetweenParticipantsId(Long agreementBetweenParticipantsId) {
		this.agreementBetweenParticipantsId = agreementBetweenParticipantsId;
	}

	public Long getInvoiceLineId() {
		return invoiceLineId;
	}

	public void setInvoiceLineId(Long invoiceLineId) {
		this.invoiceLineId = invoiceLineId;
	}

	public Long getInvoiceId() {
		return invoiceId;
	}

	public void setInvoiceId(Long invoiceId) {
		this.invoiceId = invoiceId;
	}

	public Long getProjectId() {
		return projectId;
	}

	public void setProjectId(Long projectId) {
		this.projectId = projectId;
	}

	public String getLineType() {
		return lineType;
	}

	public void setLineType(String lineType) {
		this.lineType = lineType;
	}

	public Integer getRatesMissing() {
		return ratesMissing;
	}

	public void setRatesMissing(Integer ratesMissing) {
		this.ratesMissing = ratesMissing;
	}

	public Double getTotalUnits() {
		return totalUnits;
	}

	public void setTotalUnits(Double totalUnits) {
		this.totalUnits = totalUnits;
	}

	public Double getLineAmount() {
		return lineAmount;
	}

	public void setLineAmount(Double lineAmount) {
		this.lineAmount = lineAmount;
	}

	public String getLastUpdateUserName() {
		return lastUpdateUserName;
	}

	public void setLastUpdateUserName(String lastUpdateUserName) {
		this.lastUpdateUserName = lastUpdateUserName;
	}

	public Date getLastUpdateTimestamp() {
		return lastUpdateTimestamp;
	}

	public void setLastUpdateTimestamp(Date lastUpdateTimestamp) {
		this.lastUpdateTimestamp = lastUpdateTimestamp;
	}



}

/**  javascript      vir grid population        (jsStr)

	var columnsArray = [
		 { data: "invoiceLineId" }            //0 MySql-TableName: InvoiceLine
		,{ data: "invoiceId" }                //1
		,{ data: "projectId" }                //2
		,{ data: "lineAmount" }               //3
		,{ data: "description" }              //4
		,{ data: "lastUpdateUserName" }       //5
		,{ data: "lastUpdateTimestamp" }      //6
	];

	var columnDefsArray = [
		{
			visible: false,
			targets: [0, 1, 2, 5, 6]
		}
		,{        //for Amounts
			render: function (data, type, row) {
				var html = data;
				if (type == "display") {
					html = valueToRand(data);
				}
				return html;
			},
			className: "dt-right",
			targets: [3]
		}
	];







/**  javascript      vir grid SelectFromGridDialog        (js1Str)

	var columns = [
		{ data: "invoiceLineId", name: "InvoiceLineId" }                   //0 MySql-TableName: InvoiceLine
		,{ data: "invoiceId", name: "InvoiceId" }                           //1
		,{ data: "projectId", name: "ProjectId" }                           //2
		,{ data: "lineAmount", name: "LineAmount" }                         //3
		,{ data: "description", name: "Description" }                       //4
		,{ data: "lastUpdateUserName", name: "LastUpdateUserName" }         //5
		,{ data: "lastUpdateTimestamp", name: "LastUpdateTimestamp" }       //6
	];

	var columnDefs = [
		{
			visible: false,
			targets: [0, 1, 2, 5, 6]
		}
		,{        //for Amounts
			render: function (data, type, row) {
				var html = data;
				if (type == "display") {
					html = valueToRand(data);
				}
				return html;
			},
			className: "dt-right",
			targets: [3]
		}
	];







Vir 'n Save Data function                        (js2Str)

	$("#LineAmount").val($("#"LineAmount").val().replace('R', '').replace(/ /g, ''));  //remove spaces (thousand separator) and R-symbol

	var postUrl = "/rest/ignite/v1/invoice-line/new";
	var postData = {
		invoiceLineId : $("#InvoiceLineId").val()            //0 MySql-TableName: InvoiceLine
		,invoiceId : $("#InvoiceId").val()                                        //1
		,projectId : $("#ProjectId").val()                                        //2
		,lineAmount : $("#LineAmount").val()                                      //3
		,description : $("#Description").val()                                    //4
	};

	var errors = "";






Vir 'n Populate Data function                                                  (js3Str)

		//  MySql-TableName: InvoiceLine										   (js3Str)
		$("#InvoiceLineId").val(data.invoiceLineId);                   //0
		$("#InvoiceId").val(data.invoiceId);                           //1
		populateSelect("InvoiceId",                                       //name of html select element that will be populated
				"/rest/ignite/v1/invoice/find-all",                       //url
				"invoiceId",                                              //the value that must be saved (ReferencedColumnName)
				"lastUpdateUserName",                                     //shown to user (usually a Name column)
				data.invoiceId,                                           //The selected one, if there is one
				true,                                                     //addEmpty, boolean: should we add empty object at the top
				null                                                      //completeMethod
		),

		$("#ProjectId").val(data.projectId);                           //2
		populateSelect("ProjectId",                                       //name of html select element that will be populated
				"/rest/ignite/v1/project/find-all",                       //url
				"projectId",                                              //the value that must be saved (ReferencedColumnName)
				"lastUpdateUserName",                                     //shown to user (usually a Name column)
				data.projectId,                                           //The selected one, if there is one
				true,                                                     //addEmpty, boolean: should we add empty object at the top
				null                                                      //completeMethod
		),

		$("#LineAmount").val((data.lineAmount != null) ? "R " + (data.lineAmount).toFixed(2).replace(/\d(?=(\d{3})+\.)/g, '$& ') : "");  // Sit spasie in as thousand separator en 2 desimale plekke                         //3
		$("#Description").val(data.description);                       //4






/**  HTML  om 'n grid te populate
												<th>InvoiceLineId</th>               <!--0  MySql-TableName: InvoiceLine-->
												<th>InvoiceId</th>                   <!--1  InvoiceId-->
												<th>ProjectId</th>                   <!--2  ProjectId-->
												<th>Line Amount</th>                 <!--3  LineAmount-->
												<th>Description</th>                 <!--4  Description-->
												<th>LastUpdateUserName</th>          <!--5  LastUpdateUserName-->
												<th>LastUpdateTimestamp</th>         <!--6  LastUpdateTimestamp-->

*/