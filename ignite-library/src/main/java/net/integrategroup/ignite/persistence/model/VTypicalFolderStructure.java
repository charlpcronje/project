package net.integrategroup.ignite.persistence.model;

import java.io.Serializable;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;

/** @author Generated by Johannes Marais (JohannesSQL v7.7) **/
/** ******* ********* ** 2023-11-01 11:32:16 ******** *xxx* **/

@Entity
@Table(schema = "ig_db", name = "vTypicalFolderStructure")
public class VTypicalFolderStructure implements Serializable {


    private static final long serialVersionUID = 288373060358567582L; /** ID was Generated by Johannes **/


    @Id
	@Column(name = "TypicalFolderStructureId")
	private Long typicalFolderStructureId;

	@Column(name = "ServiceDisciplineIdIndustry")
	private Long serviceDisciplineIdIndustry;

/***	@OneToOne(targetEntity = ServiceDiscipline.class)
	@JoinColumn(name = "ServiceDisciplineIdIndustry", referencedColumnName = "ServiceDisciplineId", nullable = true, insertable = false, updatable = false)
	private ServiceDiscipline serviceDisciplineIndustry; ***/

	@Column(name = "ServiceDisciplineIdIndustry_Name")
	private String serviceDisciplineIdIndustry_Name;

	@Column(name = "TypicalFolderStructureIdParent")
	private Long typicalFolderStructureIdParent;

/***	@OneToOne(targetEntity = TypicalFolderStructure.class)
	@JoinColumn(name = "TypicalFolderStructureIdParent", referencedColumnName = "TypicalFolderStructureId", nullable = true, insertable = false, updatable = false)
	private TypicalFolderStructure typicalFolderStructureParent; ***/

	@Column(name = "TypicalFolderStructureIdParent_PerSdFlag")
	private String typicalFolderStructureIdParent_PerSdFlag;

	@Column(name = "TypicalFolderStructureIdParent_Name")
	private String typicalFolderStructureIdParent_Name;

	@Column(name = "OrderNumber")
	private Long orderNumber;

	@Column(name = "PerSdFlag")
	private String perSdFlag;

	@Column(name = "Name")
	private String name;

	@Column(name = "Description")
	private String description;




	public Long getTypicalFolderStructureId() {
		return typicalFolderStructureId;
	}

	public void setTypicalFolderStructureId(Long typicalFolderStructureId) {
		this.typicalFolderStructureId = typicalFolderStructureId;
	}

	public Long getServiceDisciplineIdIndustry() {
		return serviceDisciplineIdIndustry;
	}

	public void setServiceDisciplineIdIndustry(Long serviceDisciplineIdIndustry) {
		this.serviceDisciplineIdIndustry = serviceDisciplineIdIndustry;
	}

/***	public ServiceDiscipline getServiceDisciplineIndustry() {
		return serviceDisciplineIndustry;
	}

	public void setServiceDisciplineIndustry(ServiceDiscipline serviceDisciplineIndustry) {
		this.serviceDisciplineIndustry = serviceDisciplineIndustry;
	} ***/

	public String getServiceDisciplineIdIndustry_Name() {
		return serviceDisciplineIdIndustry_Name;
	}

	public void setServiceDisciplineIdIndustry_Name(String serviceDisciplineIdIndustry_Name) {
		this.serviceDisciplineIdIndustry_Name = serviceDisciplineIdIndustry_Name;
	}

	public Long getTypicalFolderStructureIdParent() {
		return typicalFolderStructureIdParent;
	}

	public void setTypicalFolderStructureIdParent(Long typicalFolderStructureIdParent) {
		this.typicalFolderStructureIdParent = typicalFolderStructureIdParent;
	}

/***	public TypicalFolderStructure getTypicalFolderStructureParent() {
		return typicalFolderStructureParent;
	}

	public void setTypicalFolderStructureParent(TypicalFolderStructure typicalFolderStructureParent) {
		this.typicalFolderStructureParent = typicalFolderStructureParent;
	} ***/

	public String getTypicalFolderStructureIdParent_PerSdFlag() {
		return typicalFolderStructureIdParent_PerSdFlag;
	}

	public void setTypicalFolderStructureIdParent_PerSdFlag(String typicalFolderStructureIdParent_PerSdFlag) {
		this.typicalFolderStructureIdParent_PerSdFlag = typicalFolderStructureIdParent_PerSdFlag;
	}

	public String getTypicalFolderStructureIdParent_Name() {
		return typicalFolderStructureIdParent_Name;
	}

	public void setTypicalFolderStructureIdParent_Name(String typicalFolderStructureIdParent_Name) {
		this.typicalFolderStructureIdParent_Name = typicalFolderStructureIdParent_Name;
	}

	public Long getOrderNumber() {
		return orderNumber;
	}

	public void setOrderNumber(Long orderNumber) {
		this.orderNumber = orderNumber;
	}

	public String getPerSdFlag() {
		return perSdFlag;
	}

	public void setPerSdFlag(String perSdFlag) {
		this.perSdFlag = perSdFlag;
	}

	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}

	public String getDescription() {
		return description;
	}

	public void setDescription(String description) {
		this.description = description;
	}


}

/**  javascript      vir grid population        (jsStr)

	var columnsArray = [
		 { data: "typicalFolderStructureId" } //0 MySql-TableName: VTypicalFolderStructure
		,{ data: "serviceDisciplineIdIndustry" } //1
		,{ data: "serviceDisciplineIdIndustry_Name" } //2
		,{ data: "typicalFolderStructureIdParent" } //3
		,{ data: "typicalFolderStructureIdParent_PerSdFlag" } //4
		,{ data: "typicalFolderStructureIdParent_Name" } //5
		,{ data: "orderNumber" }              //6
		,{ data: "perSdFlag" }                //7
		,{ data: "name" }                     //8
		,{ data: "description" }              //9
	];

	var columnDefsArray = [
		{
			visible: false,
			targets: [0, 1, 3, 4]
		}
		,{        //for checkboxes
			render: function (data, type, row) {
				return "<input type='checkbox' readonly onclick='return false;' " + (row.typicalFolderStructureIdParent_PerSdFlag == "Y" ? " checked " : "") + ">";
			},
			className: "dt-center",
			targets:[4]
		}
		,{        //for checkboxes
			render: function (data, type, row) {
				return "<input type='checkbox' readonly onclick='return false;' " + (row.perSdFlag == "Y" ? " checked " : "") + ">";
			},
			className: "dt-center",
			targets:[7]
		}

	];







/**  javascript      vir grid SelectFromGridDialog        (js1Str)

	var columns = [
		{ data: "typicalFolderStructureId", name: "TypicalFolderStructureId" } //0 MySql-TableName: VTypicalFolderStructure
		,{ data: "serviceDisciplineIdIndustry", name: "ServiceDisciplineIdIndustry" } //1
		,{ data: "serviceDisciplineIdIndustry_Name", name: "ServiceDisciplineIdIndustry_Name" } //2
		,{ data: "typicalFolderStructureIdParent", name: "TypicalFolderStructureIdParent" } //3
		,{ data: "typicalFolderStructureIdParent_PerSdFlag", name: "TypicalFolderStructureIdParent_PerSdFlag" } //4
		,{ data: "typicalFolderStructureIdParent_Name", name: "TypicalFolderStructureIdParent_Name" } //5
		,{ data: "orderNumber", name: "OrderNumber" }                       //6
		,{ data: "perSdFlag", name: "PerSdFlag" }                           //7
		,{ data: "name", name: "Name" }                                     //8
		,{ data: "description", name: "Description" }                       //9
	];

	var columnDefs = [
		{
			visible: false,
			targets: [0, 1, 3, 4]
		}
		,{        //for checkboxes
			render: function (data, type, row) {
				return "<input type='checkbox' readonly onclick='return false;' " + (row.typicalFolderStructureIdParent_PerSdFlag == "Y" ? " checked " : "") + ">";
			},
			className: "dt-center",
			targets:[4]
		}
		,{        //for checkboxes
			render: function (data, type, row) {
				return "<input type='checkbox' readonly onclick='return false;' " + (row.perSdFlag == "Y" ? " checked " : "") + ">";
			},
			className: "dt-center",
			targets:[7]
		}


	];







Vir 'n Save Data function sien TypicalFolderStructure.java






Vir 'n Populate Data function                                                  (js3Str)

		//  MySql-TableName: VTypicalFolderStructure										   (js3Str)
		$("#xxxTypicalFolderStructureId").val(data.typicalFolderStructureId); //0
		$("#xxxServiceDisciplineIdIndustry").val(data.serviceDisciplineIdIndustry); //1
		populateSelect("xxxServiceDisciplineIdIndustry",                  //name of html select element that will be populated
				"/rest/ignite/v1/service-discipline/find-all",            //url
				"serviceDisciplineId",                                    //the value that must be saved (ReferencedColumnName)
				"name",                                                   //shown to user (usually a Name column)
				data.serviceDisciplineIdIndustry,                         //The selected one, if there is one
				true,                                                     //addEmpty, boolean: should we add empty object at the top
				null                                                      //completeMethod
		);

		$("#xxxServiceDisciplineIdIndustry_Name").val(data.serviceDisciplineIdIndustry_Name); //2
		$("#xxxTypicalFolderStructureIdParent").val(data.typicalFolderStructureIdParent); //3
		populateSelect("xxxTypicalFolderStructureIdParent",               //name of html select element that will be populated
				"/rest/ignite/v1/typical-folder-structure/find-all",      //url
				"typicalFolderStructureId",                               //the value that must be saved (ReferencedColumnName)
				"name",                                                   //shown to user (usually a Name column)
				data.typicalFolderStructureIdParent,                      //The selected one, if there is one
				true,                                                     //addEmpty, boolean: should we add empty object at the top
				null                                                      //completeMethod
		);

		$("#xxxTypicalFolderStructureIdParent_PerSdFlag").val(data.typicalFolderStructureIdParent_PerSdFlag); //4    use one of these
		$("#xxxTypicalFolderStructureIdParent_PerSdFlag").prop("checked", data.typicalFolderStructureIdParent_PerSdFlag == "Y"); //4    use one of these
		$("#xxxTypicalFolderStructureIdParent_Name").val(data.typicalFolderStructureIdParent_Name); //5
		$("#xxxOrderNumber").val(data.orderNumber);                       //6
		$("#xxxPerSdFlag").val(data.perSdFlag);                           //7    use one of these
		$("#xxxPerSdFlag").prop("checked", data.perSdFlag == "Y");        //7    use one of these
		$("#xxxName").val(data.name);                                     //8
		$("#xxxDescription").val(data.description);                       //9






/**  HTML  om 'n grid te populate
												<th>TypicalFolderStructureId</th>    <!--0  MySql-TableName: VTypicalFolderStructure-->
												<th>Service Discipline Id Industry</th> <!--1  ServiceDisciplineIdIndustry-->
												<th>Service Discipline Id Industry Name</th> <!--2  ServiceDisciplineIdIndustry_Name-->
												<th>Typical Folder Structure Id Parent</th> <!--3  TypicalFolderStructureIdParent-->
												<th>Typical Folder Structure Id Parent Per Sd</th> <!--4  TypicalFolderStructureIdParent_PerSdFlag-->
												<th>Typical Folder Structure Id Parent Name</th> <!--5  TypicalFolderStructureIdParent_Name-->
												<th>Order Number</th>                <!--6  OrderNumber-->
												<th>Per Sd</th>                      <!--7  PerSdFlag-->
												<th>Name</th>                        <!--8  Name-->
												<th>Description</th>                 <!--9  Description-->

*/